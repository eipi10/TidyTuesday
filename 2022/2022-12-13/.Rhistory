# filter(n_AB == 2, n_ABC == 2) |>
separate(site, c('no', 'a', 'b', 'c', 'd'), sep = '', remove = F) |>
select(-no) |>
mutate(
frac = ms/tr
) |>
arrange(n_AB, n_ABC, state, frac) |>
group_by(n_AB, n_ABC, state) |>
mutate(
site = 1:n())
tab_lab <- tab_plt |>
group_by(n_AB, n_ABC, state) |>
filter(site == 150)
tab_plt |> ggplot() +
geom_line(aes(site, frac, color = state)) +
geom_text_repel(aes(site, frac, label = state),
box.padding = 1, min.segment.length = 0, max.overlaps = Inf,
data = tab_lab) +
facet_grid(n_AB ~ n_ABC) +
theme(legend.position = 'none') +
scale_y_continuous(trans = 'log')
# emis_tot |>
#   filter(n_AB == 1, n_ABC == 1) |>
#   separate(site, c('no', 'a', 'b', 'c', 'd'), sep = '', remove = F) |>
#   select(-no) |>
#   mutate(
#     frac = ms/tr
#   ) |>
#   ggplot() +
#   geom_density(aes(frac, color = state))
emis_tot |>
filter(n_AB == 1, n_ABC == 1) |>
ggplot() +
geom_tile(aes(state, site, fill = ms-tr)) +
# scale_fill_viridis_c(trans = 'log10')  +
scale_fill_gradient2(midpoint = 0) +
theme(axis.text.x = element_text(angle = 45, hjust = 0)) +
scale_x_discrete(position = 'top') +
NULL
library(tidyverse)
library(glue)
n_ABC_true <- 20000
ms_trans = tibble()
nsim = 10
for (n_AB in 1:3) {
for (n_ABC in 1:3) {
for (sim in 0:(nsim-1)) {
ms_trans <- read_csv(glue('../matrix_comparisons_50000_{n_ABC_true}/ms_transition_{n_AB}_{n_ABC}_{sim}.csv'),
show_col_types = FALSE) |>
mutate(
n_AB = n_AB,
n_ABC = n_ABC,
sim = sim
) |>
bind_rows(ms_trans)
}
}
}
tr_trans = tibble()
for (n_AB in 1:3) {
for (n_ABC in 1:3) {
tr_trans <- read_csv(glue('../matrix_comparisons_50000_{n_ABC_true}/tr_transition_{n_AB}_{n_ABC}.csv'),
show_col_types = FALSE) |>
mutate(
n_AB = n_AB,
n_ABC = n_ABC) |>
bind_rows(tr_trans)
}
}
tr_trans <-
tr_trans |>
rename(tr = n)
ms_trans = tibble()
nsim = 10
for (n_AB in 1:3) {
for (n_ABC in 1:3) {
for (sim in 0:(nsim-1)) {
ms_trans <- read_csv(glue('../matrix_comparisons/ms_transition_{n_AB}_{n_ABC}_{sim}.csv'),
show_col_types = FALSE) |>
mutate(
n_AB = n_AB,
n_ABC = n_ABC,
sim = sim
) |>
bind_rows(ms_trans)
}
}
}
tr_trans = tibble()
for (n_AB in 1:3) {
for (n_ABC in 1:3) {
tr_trans <- read_csv(glue('../matrix_comparisons/tr_transition_{n_AB}_{n_ABC}.csv'),
show_col_types = FALSE) |>
mutate(
n_AB = n_AB,
n_ABC = n_ABC) |>
bind_rows(tr_trans)
}
}
tr_trans <-
tr_trans |>
rename(tr = n)
total_trans <- ms_trans |>
group_by(n_AB, n_ABC, from, to) |>
summarise(
ms = sum(n)/nsim
) |>
full_join(tr_trans, by = c('n_AB', 'n_ABC', 'from', 'to')) |>
mutate(
ms = ifelse(is.na(ms), 0, ms)
) |>
rowwise() |>
mutate(
gr = paste0(sort(c(from, to)), collapse = '_')
) |>
group_by(n_AB, n_ABC, gr) |>
summarise(
n = n(),
ms = sum(ms)/2,
tr = sum(tr)/2
) |>
separate(gr, c('from', 'to'), '_')
total_trans <- total_trans |>
mutate(
from_original = from,
to_original = to,
from = to_original,
to = from_original
) |>
select(-ends_with('original')) |>
bind_rows(total_trans) |>
group_by(n_AB, n_ABC, from, to) |>
summarise(ms = sum(ms), tr = sum(tr))
total_trans |>
group_by(n_AB, n_ABC) |>
summarise(
sum_ms = sum(ms, na.rm = T),
sum_tr = sum(tr)
)
total_trans |>
rowwise() |>
filter(str_sub(from, 2, 2) %in% c('2', '3')) |>
filter(str_sub(to, 2, 2) %in% c('2', '3')) |>
group_by(n_AB, n_ABC) |>
summarise(
ms = sum(ms, na.rm = T),
tr = sum(tr)
)
total_trans |>
ggplot() +
geom_tile(aes(to, from, fill = ms/tr)) +
geom_text(aes(to, from, label = round(ms/tr, 6))) +
facet_wrap(n_AB~n_ABC, scales = 'free') +
scale_fill_gradient2(midpoint = 0, limits = c(0.5, 2), trans = 'log2') +
# scale_fill_viridis_c(trans = 'log10')  +
NULL
total_trans |>
ggplot() +
geom_tile(aes(to, from, fill = (ms-tr)/tr)) +
geom_text(aes(to, from, label = round((ms-tr)/tr, 6))) +
facet_wrap(n_AB~n_ABC, scales = 'free') +
scale_fill_gradient2(midpoint = 0) +
# scale_fill_viridis_c(trans = 'log10')  +
NULL
total_trans |>
group_by(n_AB, n_ABC, from) |>
mutate(
ms = ms/sum(ms),
tr = tr/sum(tr)
) |>
ggplot() +
geom_tile(aes(to, from, fill = ms/tr)) +
# geom_text(aes(to, from, label = round(ms/tr, 6))) +
facet_wrap(n_AB~n_ABC, scales = 'free') +
scale_fill_gradient2(midpoint = 0,
# limits = c(0.5, 2),
trans = 'log2') +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
# scale_fill_viridis_c(trans = 'log10')  +
NULL
total_trans |>
group_by(n_AB, n_ABC, from) |>
mutate(
ms = ms/sum(ms),
tr = tr/sum(tr)
) |>
ggplot() +
geom_tile(aes(to, from, fill = (ms-tr))) +
# geom_text(aes(to, from, label = round((ms-tr), 6))) +
facet_wrap(n_AB~n_ABC, scales = 'free') +
scale_fill_gradient2(midpoint = 0,
# limits = c(-0.0008, 0.00035)
) +
# scale_fill_viridis_c(trans = 'log10')  +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
NULL
total_trans |>
group_by(n_AB, n_ABC, from) |>
mutate(
ms = ms/sum(ms),
tr = tr/sum(tr)
) |>
ggplot() +
geom_tile(aes(to, from, fill = tr)) +
geom_text(aes(to, from, label = round(tr, 6))) +
facet_wrap(n_AB~n_ABC, scales = 'free') +
# scale_fill_gradient2(midpoint = 0, limits = c(0.5, 2), trans = 'log2') +
scale_fill_viridis_c(trans = 'log10')  +
NULL
total_trans |>
group_by(n_AB, n_ABC, from) |>
mutate(
ms = ms/sum(ms),
tr = tr/sum(tr)
) |>
filter(n_AB == 1, n_ABC == 1) |>
ungroup() |>
select(from, to, ms) |>
pivot_wider(names_from = to, values_from = ms)
total_trans |>
group_by(n_AB, n_ABC, from) |>
mutate(
ms = ms/sum(ms),
tr = tr/sum(tr)
) |>
ggplot() +
geom_tile(aes(to, from, fill = ms)) +
geom_text(aes(to, from, label = round(ms, 6))) +
facet_wrap(n_AB~n_ABC, scales = 'free') +
# scale_fill_gradient2(midpoint = 0, limits = c(0.5, 2), trans = 'log2') +
scale_fill_viridis_c(trans = 'log10')  +
NULL
library(tidyverse)
library(glue)
library(ggrepel)
n_ABC_true <- 80000
ms_emis = tibble()
nsim = 10
for (n_AB in 1:3) {
for (n_ABC in 1:3) {
for (sim in 0:(nsim-1)) {
ms_emis <- read_csv(glue('../matrix_comparisons_50000_{n_ABC_true}/ms_emission_{n_AB}_{n_ABC}_{sim}.csv'),
show_col_types = FALSE) |>
mutate(
n_AB = n_AB,
n_ABC = n_ABC,
sim = sim
) |>
rename(ms = prob)  |>
bind_rows(ms_emis)
}
}
}
tr_emis = tibble()
for (n_AB in 1:3) {
for (n_ABC in 1:3) {
tr_emis <- read_csv(glue('../matrix_comparisons_50000_{n_ABC_true}/tr_emission_{n_AB}_{n_ABC}.csv'),
show_col_types = FALSE) |>
mutate(
n_AB = n_AB,
n_ABC = n_ABC) |>
rename(tr = prob) |>
bind_rows(tr_emis)
}
}
n_ABC_true <- 80000
ms_emis = tibble()
nsim = 10
for (n_AB in 1:3) {
for (n_ABC in 1:3) {
for (sim in 0:(nsim-1)) {
ms_emis <- read_csv(glue('../matrix_comparisons/ms_emission_{n_AB}_{n_ABC}_{sim}.csv'),
show_col_types = FALSE) |>
mutate(
n_AB = n_AB,
n_ABC = n_ABC,
sim = sim
) |>
rename(ms = prob)  |>
bind_rows(ms_emis)
}
}
}
tr_emis = tibble()
for (n_AB in 1:3) {
for (n_ABC in 1:3) {
tr_emis <- read_csv(glue('../matrix_comparisons/tr_emission_{n_AB}_{n_ABC}.csv'),
show_col_types = FALSE) |>
mutate(
n_AB = n_AB,
n_ABC = n_ABC) |>
rename(tr = prob) |>
bind_rows(tr_emis)
}
}
emis_tot <- ms_emis |>
group_by(state, site, n_AB, n_ABC) |>
summarise(
ms = sum(ms)/nsim
) |>
full_join(tr_emis, by = c('state', 'site', 'n_AB', 'n_ABC'))
emis_tot |>
filter(n_AB == 1, n_ABC == 1) |>
ggplot() +
geom_tile(aes(state, site, fill = ms/tr)) +
# scale_fill_viridis_c(trans = 'log10')  +
scale_fill_gradient2(midpoint = 0, trans = 'log') +
theme(axis.text.x = element_text(angle = 45, hjust = 0)) +
scale_x_discrete(position = 'top') +
NULL
nt = 'T'
emis_tot |>
filter(n_AB == 1, n_ABC == 1, state == '(0, 0, 0)') |>
separate(site, c('no', 'a', 'b', 'c', 'd'), sep = '', remove = F) |>
select(-no) |>
mutate(
frac = ms/tr
) |>
arrange(frac) |>
mutate(
gr = cut(frac, c(0, 0.35, 0.8, 1.2, 2))
) |>
ungroup() |>
mutate(norm = sum(a!=nt & b!=nt & c!=nt & d==nt)) |>
group_by(gr) |>
summarise(
frac = median(frac),
n = n(),
a = sum(a!=nt & b!=nt & c!=nt & d==nt)/unique(norm)
)
library(ggrepel)
tab_plt <- emis_tot |>
# filter(n_AB == 2, n_ABC == 2) |>
separate(site, c('no', 'a', 'b', 'c', 'd'), sep = '', remove = F) |>
select(-no) |>
mutate(
frac = ms/tr
) |>
arrange(n_AB, n_ABC, state, frac) |>
group_by(n_AB, n_ABC, state) |>
mutate(
site = 1:n())
tab_lab <- tab_plt |>
group_by(n_AB, n_ABC, state) |>
filter(site == 150)
tab_plt |> ggplot() +
geom_line(aes(site, frac, color = state)) +
geom_text_repel(aes(site, frac, label = state),
box.padding = 1, min.segment.length = 0, max.overlaps = Inf,
data = tab_lab) +
facet_grid(n_AB ~ n_ABC) +
theme(legend.position = 'none') +
scale_y_continuous(trans = 'log')
# emis_tot |>
#   filter(n_AB == 1, n_ABC == 1) |>
#   separate(site, c('no', 'a', 'b', 'c', 'd'), sep = '', remove = F) |>
#   select(-no) |>
#   mutate(
#     frac = ms/tr
#   ) |>
#   ggplot() +
#   geom_density(aes(frac, color = state))
emis_tot |>
filter(n_AB == 1, n_ABC == 1) |>
ggplot() +
geom_tile(aes(state, site, fill = ms-tr)) +
# scale_fill_viridis_c(trans = 'log10')  +
scale_fill_gradient2(midpoint = 0) +
theme(axis.text.x = element_text(angle = 45, hjust = 0)) +
scale_x_discrete(position = 'top') +
NULL
emis_tot |>
filter(n_AB == 3, n_ABC == 3) |>
ggplot() +
geom_tile(aes(state, site, fill = ms-tr)) +
# scale_fill_viridis_c(trans = 'log10')  +
scale_fill_gradient2(midpoint = 0) +
theme(axis.text.x = element_text(angle = 45, hjust = 0)) +
scale_x_discrete(position = 'top') +
NULL
emis_tot |>
filter(n_AB == 1, n_ABC == 3) |>
ggplot() +
geom_tile(aes(state, site, fill = ms-tr)) +
# scale_fill_viridis_c(trans = 'log10')  +
scale_fill_gradient2(midpoint = 0) +
theme(axis.text.x = element_text(angle = 45, hjust = 0)) +
scale_x_discrete(position = 'top') +
NULL
ms_emis
ms_emis
transform(
ms_emis,
All_same = grepl("^(.)(\\1)+$", site)
)
emis_tot
emis_tot
emis_tot |>
transform(
all_same = grepl("^(.)(\\1)+$", site)
) |>
group_by(n_AB, n_ABC, all_same) |>
summarise(
ms = sum(ms),
tr = sum(tr)
)
emis_tot |>
transform(
all_same = grepl("^(.)(\\1)+$", site)
) |>
group_by(n_AB, n_ABC, all_same) |>
summarise(
ms = sum(ms, na.rm = T),
tr = sum(tr)
)
ms_emis = tibble()
nsim = 10
for (n_AB in 1:3) {
for (n_ABC in 1:3) {
for (sim in 0:(nsim-1)) {
ms_emis <- read_csv(glue('../matrix_comparisons/ms_emission_{n_AB}_{n_ABC}_{sim}.csv'),
show_col_types = FALSE) |>
mutate(
n_AB = n_AB,
n_ABC = n_ABC,
sim = sim
) |>
rename(ms = prob)  |>
bind_rows(ms_emis)
}
}
}
tr_emis = tibble()
for (n_AB in 1:3) {
for (n_ABC in 1:3) {
tr_emis <- read_csv(glue('../matrix_comparisons/tr_emission_{n_AB}_{n_ABC}.csv'),
show_col_types = FALSE) |>
mutate(
n_AB = n_AB,
n_ABC = n_ABC) |>
rename(tr = prob) |>
bind_rows(tr_emis)
}
}
emis_tot
emis_tot |>
transform(
all_same = grepl("^(.)(\\1)+$", site)
) |>
group_by(n_AB, n_ABC, all_same) |>
summarise(
ms = mean(ms, na.rm = T),
tr = mean(tr)
)
emis_tot
emis_tot |>
transform(
all_same = grepl("^(.)(\\1)+$", site)
) |>
group_by(n_AB, n_ABC, state, all_same) |>
summarise(
ms = sum(ms, na.rm = T),
tr = sum(tr)
)
emis_tot |>
transform(
all_same = grepl("^(.)(\\1)+$", site)
)
emis_tot |>
transform(
all_same = grepl("^(.)(\\1)+$", site)
) |>
group_by(n_AB, n_ABC, state, all_same) |>
summarise(
ms = sum(ms, na.rm = T),
tr = sum(tr)
)
emis_tot |>
transform(
all_same = grepl("^(.)(\\1)+$", site)
) |>
group_by(n_AB, n_ABC, state, all_same) |>
summarise(
ms = sum(ms, na.rm = T),
tr = sum(tr)
) |>
pivot_longer(c(ms, tr))
emis_tot |>
transform(
all_same = grepl("^(.)(\\1)+$", site)
) |>
group_by(n_AB, n_ABC, state, all_same) |>
summarise(
ms = sum(ms, na.rm = T),
tr = sum(tr)
) |>
pivot_longer(c(ms, tr)) |>
ggplot() +
geom_density(aes(value, color = name, linetype = all_same))
emis_tot |>
transform(
all_same = grepl("^(.)(\\1)+$", site)
) |>
group_by(n_AB, n_ABC, state, all_same) |>
summarise(
ms = sum(ms, na.rm = T),
tr = sum(tr)
) |>
pivot_longer(c(ms, tr)) |>
ggplot() +
geom_density(aes(value, color = name)) +
facet_grid(~all_same, scales = 'free')
